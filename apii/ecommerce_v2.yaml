openapi: 3.0.3
info:
  title: E-Commerce API v2
  version: 2.0.0
servers:
  - url: https://api.v2.ecommerce.com
security:
  - oauth2: [read:products]
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.ecommerce.com/oauth/authorize
          tokenUrl: https://auth.ecommerce.com/oauth/token
          scopes:
            read:products: Read products
            write:products: Write products
  schemas:
    Product:
      type: object
      properties:
        productId:
          type: string
        productName:
          type: string
        price:
          type: number
          format: float
        inventory:
          type: integer
        categories:
          type: array
          items:
            type: string
    User:
      type: object
      properties:
        userId:
          type: string
        emailAddress:
          type: string
        accountType:
          type: string
          enum: [admin, customer, vendor]
paths:
  /products:
    get:
      summary: List products
      security:
        - oauth2: [read:products]
      parameters:
        - name: category
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Create product
      security:
        - oauth2: [write:products]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created
  /products/{productId}:
    get:
      summary: Get product
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /users/{userId}:
    get:
      summary: Get user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
